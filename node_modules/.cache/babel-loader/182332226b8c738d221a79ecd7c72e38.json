{"ast":null,"code":"import _slicedToArray from\"C:/Users/nicol/Documents/Project/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";import styles from\"./Navigation.module.css\";import NavigationItems from\"./NavigationItems/NavigationItems\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Navigation=function Navigation(props){var listenerRef=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isScrolled=_useState2[0],setIsScrolled=_useState2[1];var _useState3=useState(\"intro\"),_useState4=_slicedToArray(_useState3,2),section=_useState4[0],setSection=_useState4[1];useEffect(function(){var listener=listenerRef.current;listener=document.addEventListener(\"scroll\",function(){var scrolled=document.scrollingElement.scrollTop;if(scrolled>=70){if(!isScrolled){setIsScrolled(true);}}else{if(isScrolled){setIsScrolled(false);}}if(scrolled<650){if(section!==\"intro\"){setSection(\"intro\");}}else if(scrolled<1300){if(section!==\"about\"){setSection(\"about\");}}else if(scrolled<1950){if(section!==\"passion\"){setSection(\"passion\");}}});return function(){document.removeEventListener(\"scroll\",listener);};},[section,isScrolled]);return/*#__PURE__*/_jsxs(\"header\",{className:isScrolled?styles.Scrolled:styles.Top,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.Name,children:/*#__PURE__*/_jsx(\"span\",{children:\"Nicolas Othmar\"})}),/*#__PURE__*/_jsx(\"nav\",{className:styles.DesktopOnly,children:/*#__PURE__*/_jsx(NavigationItems,{section:section})})]});};export default Navigation;","map":{"version":3,"sources":["C:/Users/nicol/Documents/Project/portfolio/src/components/Navigation/Navigation.tsx"],"names":["React","useEffect","useRef","useState","styles","NavigationItems","Navigation","props","listenerRef","isScrolled","setIsScrolled","section","setSection","listener","current","document","addEventListener","scrolled","scrollingElement","scrollTop","removeEventListener","Scrolled","Top","Name","DesktopOnly"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,QAAnC,KAAmD,OAAnD,CAEA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mCAA5B,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAgB,CACjC,GAAIC,CAAAA,WAAgB,CAAGN,MAAM,CAAC,IAAD,CAA7B,CADiC,cAEGC,QAAQ,CAAC,KAAD,CAFX,wCAE1BM,UAF0B,eAEdC,aAFc,8BAGHP,QAAQ,CAAC,OAAD,CAHL,yCAG1BQ,OAH0B,eAGjBC,UAHiB,eAKjCX,SAAS,CAAC,UAAM,CACd,GAAIY,CAAAA,QAAQ,CAAGL,WAAW,CAACM,OAA3B,CACAD,QAAQ,CAAGE,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,CAAoC,UAAM,CACnD,GAAIC,CAAAA,QAAQ,CAAGF,QAAQ,CAACG,gBAAT,CAA2BC,SAA1C,CACA,GAAIF,QAAQ,EAAI,EAAhB,CAAoB,CAClB,GAAI,CAACR,UAAL,CAAiB,CACfC,aAAa,CAAC,IAAD,CAAb,CACD,CACF,CAJD,IAIO,CACL,GAAID,UAAJ,CAAgB,CACdC,aAAa,CAAC,KAAD,CAAb,CACD,CACF,CAED,GAAIO,QAAQ,CAAG,GAAf,CAAoB,CAClB,GAAIN,OAAO,GAAK,OAAhB,CAAyB,CACvBC,UAAU,CAAC,OAAD,CAAV,CACD,CACF,CAJD,IAIO,IAAIK,QAAQ,CAAG,IAAf,CAAqB,CAC1B,GAAIN,OAAO,GAAK,OAAhB,CAAyB,CACvBC,UAAU,CAAC,OAAD,CAAV,CACD,CACF,CAJM,IAIA,IAAIK,QAAQ,CAAG,IAAf,CAAqB,CAC1B,GAAIN,OAAO,GAAK,SAAhB,CAA2B,CACzBC,UAAU,CAAC,SAAD,CAAV,CACD,CACF,CACF,CAzBU,CAAX,CA0BA,MAAO,WAAM,CACXG,QAAQ,CAACK,mBAAT,CAA6B,QAA7B,CAAuCP,QAAvC,EACD,CAFD,CAGD,CA/BQ,CA+BN,CAACF,OAAD,CAAUF,UAAV,CA/BM,CAAT,CAiCA,mBACE,gBAAQ,SAAS,CAAEA,UAAU,CAAGL,MAAM,CAACiB,QAAV,CAAqBjB,MAAM,CAACkB,GAAzD,wBACE,YAAK,SAAS,CAAElB,MAAM,CAACmB,IAAvB,uBACE,wCADF,EADF,cAKE,YAAK,SAAS,CAAEnB,MAAM,CAACoB,WAAvB,uBACE,KAAC,eAAD,EAAiB,OAAO,CAAEb,OAA1B,EADF,EALF,GADF,CAWD,CAjDD,CAmDA,cAAeL,CAAAA,UAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport styles from \"./Navigation.module.css\";\r\nimport NavigationItems from \"./NavigationItems/NavigationItems\";\r\n\r\nconst Navigation = (props: any) => {\r\n  let listenerRef: any = useRef(null);\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n  const [section, setSection] = useState(\"intro\");\r\n\r\n  useEffect(() => {\r\n    let listener = listenerRef.current;\r\n    listener = document.addEventListener(\"scroll\", () => {\r\n      let scrolled = document.scrollingElement!.scrollTop;\r\n      if (scrolled >= 70) {\r\n        if (!isScrolled) {\r\n          setIsScrolled(true);\r\n        }\r\n      } else {\r\n        if (isScrolled) {\r\n          setIsScrolled(false);\r\n        }\r\n      }\r\n\r\n      if (scrolled < 650) {\r\n        if (section !== \"intro\") {\r\n          setSection(\"intro\");\r\n        }\r\n      } else if (scrolled < 1300) {\r\n        if (section !== \"about\") {\r\n          setSection(\"about\");\r\n        }\r\n      } else if (scrolled < 1950) {\r\n        if (section !== \"passion\") {\r\n          setSection(\"passion\");\r\n        }\r\n      }\r\n    });\r\n    return () => {\r\n      document.removeEventListener(\"scroll\", listener);\r\n    };\r\n  }, [section, isScrolled]);\r\n\r\n  return (\r\n    <header className={isScrolled ? styles.Scrolled : styles.Top}>\r\n      <div className={styles.Name}>\r\n        <span>Nicolas Othmar</span>\r\n        {/* <span>{section}</span> */}\r\n      </div>\r\n      <nav className={styles.DesktopOnly}>\r\n        <NavigationItems section={section} />\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n"]},"metadata":{},"sourceType":"module"}