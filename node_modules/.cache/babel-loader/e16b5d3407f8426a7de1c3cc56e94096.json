{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\Documents\\\\Project\\\\portfolio\\\\src\\\\Section\\\\Work\\\\Work.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./Work.module.css\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport Project from \"./Project/Project\";\nimport ProjectView from \"./ProjectView/ProjectView\";\nimport burgerOrder from \"../../assets/img/projects-screenshot/burger-order.png\";\nimport dnd from \"../../assets/img/projects-screenshot/dnd.png\";\nimport reactProfile from \"../../assets/img/projects-screenshot/react_profile.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Passion = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const projects = [{\n    title: \"Burger Order\",\n    desc: \"A web app for building and ordering your own burger.\" + \" Add as many ingredients as you want. You can also see your order history\",\n    longerDesc: \"Burger Order is a React web app that was build with implementation of Firebase for the database.\" + \" Create your own account so you can see your order history.\" + \" This project was made to sharpen my understanding of the basic and advance parts of React.\",\n    pict: [burgerOrder, reactProfile, dnd],\n    tech: \"React · CSS\",\n    fullTech: [\"Axios\", \"CSS\", \"Firebase\", \"Jest\", \"React\", \"Redux\"],\n    source: \"https://github.com/nicolas-ot/burger-order\",\n    site: \"https://burger-builder-1efe7.firebaseapp.com/\",\n    id: 1\n  }, {\n    title: \"Project Manager\",\n    desc: \"A project manager with drag-and-drop implementation.\",\n    longerDesc: \"This is a small web app project that was built solely with typescript and css for managing projects.\" + \" You can add new projects that will automatically assigned to active projects.\" + \" The projects can then be moved freely with drag-and-drop between Active Projects and Finished Projects\",\n    pict: [dnd],\n    tech: \"Typescript · CSS\",\n    fullTech: [\"Axios\", \"CSS\", \"Firebase\", \"Jest\", \"React\", \"Redux\"],\n    source: \"https://github.com/nicolas-ot/task-manager\",\n    site: \"https://nicolas-ot.github.io/task-manager/\",\n    id: 2\n  }, {\n    title: \"React Profile\",\n    desc: \"My website portfolio\",\n    longerDesc: \"\",\n    pict: [reactProfile],\n    tech: \"React · CSS · Bootstrap\",\n    fullTech: [\"Axios\", \"CSS\", \"Firebase\", \"Jest\", \"React\", \"Redux\"],\n    source: \"https://github.com/nicolas-ot/portfolio\",\n    id: 3\n  } // {\n  //   title: \"Netflix Clone\",\n  //   desc: \"A clone of Netflix\",\n  //   longerDesc: \"This is a netflix clone built mostly using php\",\n  //   pict: [netflixClone],\n  //   tech: \"PHP · HTML · JS · CSS · MySQL\",\n  //   fullTech: [\"Axios\", \"CSS\", \"Firebase\", \"Jest\", \"React\", \"Redux\"],\n  //   source: \"https://github.com/nicolas-ot/netflix-clone\",\n  //   id: 4,\n  // },\n  ];\n  const [viewing, setViewing] = useState(false);\n  const [viewedProject, setViewedProject] = useState(null);\n  let projectView = null;\n\n  const clickHandler = project => {\n    setViewing(true);\n    setViewedProject(project);\n  };\n\n  const clickAwayHandler = () => {\n    setViewing(false);\n  };\n\n  if (viewedProject !== null) {\n    projectView = /*#__PURE__*/_jsxDEV(ProjectView // @ts-ignore: Object is possibly 'null'.\n    , {\n      title: viewedProject.title // @ts-ignore: Object is possibly 'null'.\n      ,\n      desc: viewedProject.longerDesc // @ts-ignore: Object is possibly 'null'.\n      ,\n      pict: viewedProject.pict // @ts-ignore: Object is possibly 'null'.\n      ,\n      source: viewedProject.source // @ts-ignore: Object is possibly 'null'.\n      ,\n      site: viewedProject === null || viewedProject === void 0 ? void 0 : viewedProject.site // @ts-ignore: Object is possibly 'null'.\n      ,\n      fullTech: viewedProject.fullTech,\n      clicked: clickAwayHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n  const projectsComponent = projects.map(project => {\n    return /*#__PURE__*/_jsxDEV(Project, {\n      onClick: () => clickHandler(project),\n      title: project.title,\n      desc: project.desc,\n      pict: project.pict[0],\n      tech: project.tech\n    }, project.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }); // const projectsView = projects.map((project) => {\n  //   return (\n  //     <ProjectView\n  //       title={project.title}\n  //       desc={project.desc}\n  //       pict={project.pict}\n  //     ></ProjectView>\n  //   );\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.Content,\n    id: \"projects\",\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: viewing,\n      modalClosed: clickAwayHandler,\n      children: projectView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Passion,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Items,\n        children: projectsComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}, \"Ncm084MDI+ORD3cQYlKto0ixu6s=\"));\n_c2 = Passion;\nexport default Passion;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Passion$React.forwardRef\");\n$RefreshReg$(_c2, \"Passion\");","map":{"version":3,"sources":["C:/Users/nicol/Documents/Project/portfolio/src/Section/Work/Work.tsx"],"names":["React","useState","styles","Modal","Project","ProjectView","burgerOrder","dnd","reactProfile","Passion","forwardRef","props","ref","projects","title","desc","longerDesc","pict","tech","fullTech","source","site","id","viewing","setViewing","viewedProject","setViewedProject","projectView","clickHandler","project","clickAwayHandler","projectsComponent","map","Content","Items"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport styles from \"./Work.module.css\";\r\n\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Project from \"./Project/Project\";\r\nimport ProjectView from \"./ProjectView/ProjectView\";\r\n\r\nimport burgerOrder from \"../../assets/img/projects-screenshot/burger-order.png\";\r\nimport dnd from \"../../assets/img/projects-screenshot/dnd.png\";\r\n\r\nimport reactProfile from \"../../assets/img/projects-screenshot/react_profile.png\";\r\n\r\ntype ProjectType = {\r\n  title: string;\r\n  desc: string;\r\n  longerDesc: string;\r\n  pict: string[];\r\n  tech: string;\r\n  fullTech?: string[];\r\n  source: string;\r\n  site?: string;\r\n  id: number;\r\n};\r\n\r\nconst Passion = React.forwardRef<any>((props: any, ref) => {\r\n  const projects: ProjectType[] = [\r\n    {\r\n      title: \"Burger Order\",\r\n      desc:\r\n        \"A web app for building and ordering your own burger.\" +\r\n        \" Add as many ingredients as you want. You can also see your order history\",\r\n      longerDesc:\r\n        \"Burger Order is a React web app that was build with implementation of Firebase for the database.\" +\r\n        \" Create your own account so you can see your order history.\" +\r\n        \" This project was made to sharpen my understanding of the basic and advance parts of React.\",\r\n      pict: [burgerOrder, reactProfile, dnd],\r\n      tech: \"React · CSS\",\r\n      fullTech: [\"Axios\", \"CSS\", \"Firebase\", \"Jest\", \"React\", \"Redux\"],\r\n      source: \"https://github.com/nicolas-ot/burger-order\",\r\n      site: \"https://burger-builder-1efe7.firebaseapp.com/\",\r\n      id: 1,\r\n    },\r\n    {\r\n      title: \"Project Manager\",\r\n      desc: \"A project manager with drag-and-drop implementation.\",\r\n      longerDesc:\r\n        \"This is a small web app project that was built solely with typescript and css for managing projects.\" +\r\n        \" You can add new projects that will automatically assigned to active projects.\" +\r\n        \" The projects can then be moved freely with drag-and-drop between Active Projects and Finished Projects\",\r\n\r\n      pict: [dnd],\r\n      tech: \"Typescript · CSS\",\r\n      fullTech: [\"Axios\", \"CSS\", \"Firebase\", \"Jest\", \"React\", \"Redux\"],\r\n\r\n      source: \"https://github.com/nicolas-ot/task-manager\",\r\n      site: \"https://nicolas-ot.github.io/task-manager/\",\r\n      id: 2,\r\n    },\r\n    {\r\n      title: \"React Profile\",\r\n      desc: \"My website portfolio\",\r\n      longerDesc: \"\",\r\n\r\n      pict: [reactProfile],\r\n      tech: \"React · CSS · Bootstrap\",\r\n      fullTech: [\"Axios\", \"CSS\", \"Firebase\", \"Jest\", \"React\", \"Redux\"],\r\n      source: \"https://github.com/nicolas-ot/portfolio\",\r\n      id: 3,\r\n    },\r\n    // {\r\n    //   title: \"Netflix Clone\",\r\n    //   desc: \"A clone of Netflix\",\r\n    //   longerDesc: \"This is a netflix clone built mostly using php\",\r\n    //   pict: [netflixClone],\r\n    //   tech: \"PHP · HTML · JS · CSS · MySQL\",\r\n    //   fullTech: [\"Axios\", \"CSS\", \"Firebase\", \"Jest\", \"React\", \"Redux\"],\r\n    //   source: \"https://github.com/nicolas-ot/netflix-clone\",\r\n    //   id: 4,\r\n    // },\r\n  ];\r\n\r\n  const [viewing, setViewing] = useState(false);\r\n  const [viewedProject, setViewedProject] = useState(null);\r\n\r\n  let projectView = null;\r\n\r\n  const clickHandler = (project: any) => {\r\n    setViewing(true);\r\n    setViewedProject(project);\r\n  };\r\n\r\n  const clickAwayHandler = () => {\r\n    setViewing(false);\r\n  };\r\n\r\n  if (viewedProject !== null) {\r\n    projectView = (\r\n      <ProjectView\r\n        // @ts-ignore: Object is possibly 'null'.\r\n        title={viewedProject.title}\r\n        // @ts-ignore: Object is possibly 'null'.\r\n        desc={viewedProject.longerDesc}\r\n        // @ts-ignore: Object is possibly 'null'.\r\n        pict={viewedProject.pict}\r\n        // @ts-ignore: Object is possibly 'null'.\r\n        source={viewedProject.source}\r\n        // @ts-ignore: Object is possibly 'null'.\r\n        site={viewedProject?.site}\r\n        // @ts-ignore: Object is possibly 'null'.\r\n        fullTech={viewedProject.fullTech}\r\n        clicked={clickAwayHandler}\r\n      ></ProjectView>\r\n    );\r\n  }\r\n\r\n  const projectsComponent = projects.map((project) => {\r\n    return (\r\n      <Project\r\n        key={project.id}\r\n        onClick={() => clickHandler(project)}\r\n        title={project.title}\r\n        desc={project.desc}\r\n        pict={project.pict[0]}\r\n        tech={project.tech}\r\n      ></Project>\r\n    );\r\n  });\r\n\r\n  // const projectsView = projects.map((project) => {\r\n  //   return (\r\n  //     <ProjectView\r\n  //       title={project.title}\r\n  //       desc={project.desc}\r\n  //       pict={project.pict}\r\n  //     ></ProjectView>\r\n  //   );\r\n  // });\r\n\r\n  return (\r\n    <section className={styles.Content} id=\"projects\" ref={ref}>\r\n      <Modal show={viewing} modalClosed={clickAwayHandler}>\r\n        {projectView}\r\n        {/* <Slider selected={viewedProject}>{projectsView}</Slider> unused until slickGoTo fixed*/}\r\n      </Modal>\r\n      <div className={styles.Passion}>\r\n        <h2>My projects</h2>\r\n        <div className={styles.Items}>{projectsComponent}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default Passion;\r\n"]},"metadata":{},"sourceType":"module"}