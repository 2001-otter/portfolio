{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\Documents\\\\Project\\\\portfolio\\\\src\\\\components\\\\Navigation\\\\Navigation.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useInView } from \"react-intersection-observer\";\nimport styles from \"./Navigation.module.css\";\nimport NavigationItems from \"./NavigationItems/NavigationItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navigation = props => {\n  _s();\n\n  let listenerRef = useRef(null);\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [section, setSection] = useState(\"intro\");\n  const {\n    ref,\n    inView,\n    entry\n  } = useInView({\n    /* Optional options */\n    threshold: 0\n  });\n  useEffect(() => {\n    let listener = listenerRef.current;\n    listener = document.addEventListener(\"scroll\", () => {\n      let scrolled = document.scrollingElement.scrollTop;\n\n      if (scrolled >= 70) {\n        if (!isScrolled) {\n          setIsScrolled(true);\n        }\n      } else {\n        if (isScrolled) {\n          setIsScrolled(false);\n        }\n      }\n\n      if (scrolled < 620) {\n        if (section !== \"intro\") {\n          setSection(\"intro\");\n        }\n      } else if (scrolled >= 620 && scrolled < 1400) {\n        if (section !== \"about\") {\n          setSection(\"about\");\n        }\n      } else if (scrolled >= 1300 && scrolled < 2050) {\n        if (section !== \"work\") {\n          setSection(\"work\");\n        }\n      } else if (scrolled >= 2050 && scrolled < 2800) {\n        if (section !== \"projects\") {\n          setSection(\"projects\");\n        }\n      } else if (scrolled >= 2800 && scrolled < 3300) {\n        if (section !== \"contact\") {\n          setSection(\"contact\");\n        }\n      }\n    });\n    return () => {\n      document.removeEventListener(\"scroll\", listener);\n    };\n  }, [section, isScrolled]); // console.log(props.currentSection, \"navigation\");\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: isScrolled ? styles.Scrolled : styles.Top,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Name,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Nicolas Theodarus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), props.currentSection && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"tes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: styles.DesktopOnly,\n      children: /*#__PURE__*/_jsxDEV(NavigationItems, {\n        section: section,\n        currentSection: section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navigation, \"oB84nMa/OLKbwAGBeOIgV9c8fO8=\", false, function () {\n  return [useInView];\n});\n\n_c = Navigation;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["C:/Users/nicol/Documents/Project/portfolio/src/components/Navigation/Navigation.tsx"],"names":["React","useEffect","useRef","useState","useInView","styles","NavigationItems","Navigation","props","listenerRef","isScrolled","setIsScrolled","section","setSection","ref","inView","entry","threshold","listener","current","document","addEventListener","scrolled","scrollingElement","scrollTop","removeEventListener","Scrolled","Top","Name","currentSection","DesktopOnly"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,6BAA1B;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAgB;AAAA;;AACjC,MAAIC,WAAgB,GAAGP,MAAM,CAAC,IAAD,CAA7B;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,OAAD,CAAtC;AAEA,QAAM;AAAEW,IAAAA,GAAF;AAAOC,IAAAA,MAAP;AAAeC,IAAAA;AAAf,MAAyBZ,SAAS,CAAC;AACvC;AACAa,IAAAA,SAAS,EAAE;AAF4B,GAAD,CAAxC;AAKAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,QAAQ,GAAGT,WAAW,CAACU,OAA3B;AACAD,IAAAA,QAAQ,GAAGE,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoC,MAAM;AACnD,UAAIC,QAAQ,GAAGF,QAAQ,CAACG,gBAAT,CAA2BC,SAA1C;;AACA,UAAIF,QAAQ,IAAI,EAAhB,EAAoB;AAClB,YAAI,CAACZ,UAAL,EAAiB;AACfC,UAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,OAJD,MAIO;AACL,YAAID,UAAJ,EAAgB;AACdC,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF;;AAED,UAAIW,QAAQ,GAAG,GAAf,EAAoB;AAClB,YAAIV,OAAO,KAAK,OAAhB,EAAyB;AACvBC,UAAAA,UAAU,CAAC,OAAD,CAAV;AACD;AACF,OAJD,MAIO,IAAIS,QAAQ,IAAI,GAAZ,IAAmBA,QAAQ,GAAG,IAAlC,EAAwC;AAC7C,YAAIV,OAAO,KAAK,OAAhB,EAAyB;AACvBC,UAAAA,UAAU,CAAC,OAAD,CAAV;AACD;AACF,OAJM,MAIA,IAAIS,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,GAAG,IAAnC,EAAyC;AAC9C,YAAIV,OAAO,KAAK,MAAhB,EAAwB;AACtBC,UAAAA,UAAU,CAAC,MAAD,CAAV;AACD;AACF,OAJM,MAIA,IAAIS,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,GAAG,IAAnC,EAAyC;AAC9C,YAAIV,OAAO,KAAK,UAAhB,EAA4B;AAC1BC,UAAAA,UAAU,CAAC,UAAD,CAAV;AACD;AACF,OAJM,MAIA,IAAIS,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,GAAG,IAAnC,EAAyC;AAC9C,YAAIV,OAAO,KAAK,SAAhB,EAA2B;AACzBC,UAAAA,UAAU,CAAC,SAAD,CAAV;AACD;AACF;AACF,KAjCU,CAAX;AAkCA,WAAO,MAAM;AACXO,MAAAA,QAAQ,CAACK,mBAAT,CAA6B,QAA7B,EAAuCP,QAAvC;AACD,KAFD;AAGD,GAvCQ,EAuCN,CAACN,OAAD,EAAUF,UAAV,CAvCM,CAAT,CAViC,CAmDjC;;AACA,sBACE;AAAQ,IAAA,SAAS,EAAEA,UAAU,GAAGL,MAAM,CAACqB,QAAV,GAAqBrB,MAAM,CAACsB,GAAzD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEtB,MAAM,CAACuB,IAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGpB,KAAK,CAACqB,cAAN,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAF3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAExB,MAAM,CAACyB,WAAvB;AAAA,6BACE,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAElB,OAA1B;AAAmC,QAAA,cAAc,EAAEA;AAAnD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA/DD;;GAAML,U;UAK2BH,S;;;KAL3BG,U;AAiEN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nimport styles from \"./Navigation.module.css\";\r\nimport NavigationItems from \"./NavigationItems/NavigationItems\";\r\n\r\nconst Navigation = (props: any) => {\r\n  let listenerRef: any = useRef(null);\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n  const [section, setSection] = useState(\"intro\");\r\n\r\n  const { ref, inView, entry } = useInView({\r\n    /* Optional options */\r\n    threshold: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    let listener = listenerRef.current;\r\n    listener = document.addEventListener(\"scroll\", () => {\r\n      let scrolled = document.scrollingElement!.scrollTop;\r\n      if (scrolled >= 70) {\r\n        if (!isScrolled) {\r\n          setIsScrolled(true);\r\n        }\r\n      } else {\r\n        if (isScrolled) {\r\n          setIsScrolled(false);\r\n        }\r\n      }\r\n\r\n      if (scrolled < 620) {\r\n        if (section !== \"intro\") {\r\n          setSection(\"intro\");\r\n        }\r\n      } else if (scrolled >= 620 && scrolled < 1400) {\r\n        if (section !== \"about\") {\r\n          setSection(\"about\");\r\n        }\r\n      } else if (scrolled >= 1300 && scrolled < 2050) {\r\n        if (section !== \"work\") {\r\n          setSection(\"work\");\r\n        }\r\n      } else if (scrolled >= 2050 && scrolled < 2800) {\r\n        if (section !== \"projects\") {\r\n          setSection(\"projects\");\r\n        }\r\n      } else if (scrolled >= 2800 && scrolled < 3300) {\r\n        if (section !== \"contact\") {\r\n          setSection(\"contact\");\r\n        }\r\n      }\r\n    });\r\n    return () => {\r\n      document.removeEventListener(\"scroll\", listener);\r\n    };\r\n  }, [section, isScrolled]);\r\n\r\n  // console.log(props.currentSection, \"navigation\");\r\n  return (\r\n    <header className={isScrolled ? styles.Scrolled : styles.Top}>\r\n      <div className={styles.Name}>\r\n        <span>Nicolas Theodarus</span>\r\n        {props.currentSection && <span>tes</span>}\r\n      </div>\r\n      <nav className={styles.DesktopOnly}>\r\n        <NavigationItems section={section} currentSection={section} />\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n"]},"metadata":{},"sourceType":"module"}